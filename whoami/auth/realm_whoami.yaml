apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: whoami-realm-rc
spec:
  keycloakCRName: phxwi-kc
  realm:
    #change
    id: whoami
    realm: whoami
    # notBefore: 0
    # defaultSignatureAlgorithm: RS256
    # revokeRefreshToken: false
    # refreshTokenMaxReuse: 0
    # accessTokenLifespan: 300
    # accessTokenLifespanForImplicitFlow: 900
    # ssoSessionIdleTimeout: 1800
    # ssoSessionMaxLifespan: 36000
    # ssoSessionIdleTimeoutRememberMe: 0
    # ssoSessionMaxLifespanRememberMe: 0
    # offlineSessionIdleTimeout: 2592000
    # offlineSessionMaxLifespanEnabled: false
    # offlineSessionMaxLifespan: 5184000
    # clientSessionIdleTimeout: 0
    # clientSessionMaxLifespan: 0
    # clientOfflineSessionIdleTimeout: 0
    # clientOfflineSessionMaxLifespan: 0
    # accessCodeLifespan: 60
    # accessCodeLifespanUserAction: 300
    # accessCodeLifespanLogin: 1800
    # actionTokenGeneratedByAdminLifespan: 43200
    # actionTokenGeneratedByUserLifespan: 300
    # oauth2DeviceCodeLifespan: 600
    # oauth2DevicePollingInterval: 5
    enabled: true
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: false
    # permanentLockout: false
    # maxFailureWaitSeconds: 900
    # minimumQuickLoginWaitSeconds: 60
    # waitIncrementSeconds: 60
    # quickLoginCheckMilliSeconds: 1000
    # maxDeltaTimeSeconds: 43200
    # failureFactor: 30
    # roles:
    #   realm:
    #     - name: offline_access
    #       description: ${role_offline-access}
    #       composite: false
    #       clientRole: false
    #       attributes: {}
    #     - name: uma_authorization
    #       description: ${role_uma_authorization}
    #       composite: false
    #       clientRole: false
    #       attributes: {}
    #     - # change
    #       name: default-roles-apptest
    #       description: ${role_default-roles}
    #       composite: true
    #       composites:
    #         realm:
    #           - offline_access
    #           - uma_authorization
    #         client:
    #           account:
    #             - view-profile
    #             - manage-account
    #       clientRole: false
    #       attributes: {}
    #   client:
    #     realm-management:
    #       - name: query-groups
    #         description: ${role_query-groups}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: view-authorization
    #         description: ${role_view-authorization}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-realm
    #         description: ${role_manage-realm}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: view-identity-providers
    #         description: ${role_view-identity-providers}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: query-clients
    #         description: ${role_query-clients}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-authorization
    #         description: ${role_manage-authorization}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: create-client
    #         description: ${role_create-client}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-identity-providers
    #         description: ${role_manage-identity-providers}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: realm-admin
    #         description: ${role_realm-admin}
    #         composite: true
    #         composites:
    #           client:
    #             realm-management:
    #               - query-groups
    #               - view-authorization
    #               - manage-realm
    #               - view-identity-providers
    #               - query-clients
    #               - manage-authorization
    #               - create-client
    #               - manage-identity-providers
    #               - view-events
    #               - manage-users
    #               - manage-events
    #               - impersonation
    #               - view-clients
    #               - view-users
    #               - query-users
    #               - view-realm
    #               - manage-clients
    #               - query-realms
    #         clientRole: true
    #         attributes: {}
    #       - name: view-events
    #         description: ${role_view-events}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-users
    #         description: ${role_manage-users}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: impersonation
    #         description: ${role_impersonation}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-events
    #         description: ${role_manage-events}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: view-clients
    #         description: ${role_view-clients}
    #         composite: true
    #         composites:
    #           client:
    #             realm-management:
    #               - query-clients
    #         clientRole: true
    #         attributes: {}
    #       - name: view-users
    #         description: ${role_view-users}
    #         composite: true
    #         composites:
    #           client:
    #             realm-management:
    #               - query-groups
    #               - query-users
    #         clientRole: true
    #         attributes: {}
    #       - name: query-users
    #         description: ${role_query-users}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: view-realm
    #         description: ${role_view-realm}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-clients
    #         description: ${role_manage-clients}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: query-realms
    #         description: ${role_query-realms}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #     security-admin-console: []
    #     # change
    #     app1-oauth2-proxy: []
    #     admin-cli: []
    #     account-console: []
    #     broker:
    #       - name: read-token
    #         description: ${role_read-token}
    #         composite: false
    #         clientRole: true
    #         #containerId: d92d00d7-e0cc-4005-a37f-b6681d521e54
    #         attributes: {}
    #     account:
    #       - name: manage-account-links
    #         description: ${role_manage-account-links}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: delete-account
    #         description: ${role_delete-account}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: view-groups
    #         description: ${role_view-groups}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    #       - name: manage-consent
    #         description: ${role_manage-consent}
    #         composite: true
    #         composites:
    #           client:
    #             account:
    #               - view-consent
    #         clientRole: true
    #         attributes: {}
    #       - name: view-applications
    #         description: ${role_view-applications}
    #         composite: false
    #         clientRole: true
    #         #containerId: 41826b2b-4dde-4564-9dde-ef5ce386d179
    #         attributes: {}
    #       - name: view-profile
    #         description: ${role_view-profile}
    #         composite: false
    #         clientRole: true
    #         #containerId: 41826b2b-4dde-4564-9dde-ef5ce386d179
    #         attributes: {}
    #       - name: manage-account
    #         description: ${role_manage-account}
    #         composite: true
    #         composites:
    #           client:
    #             account:
    #               - manage-account-links
    #         clientRole: true
    #         #containerId: 41826b2b-4dde-4564-9dde-ef5ce386d179
    #         attributes: {}
    #       - name: view-consent
    #         description: ${role_view-consent}
    #         composite: false
    #         clientRole: true
    #         attributes: {}
    # groups:
    #   - name: app1
    #     path: /app1
    #     attributes: {}
    #     realmRoles: []
    #     clientRoles: {}
    #     subGroups: []
    defaultRole:
      # change
      name: default-roles-apptest
      description: ${role_default-roles}
      composite: true
      clientRole: false
    requiredCredentials:
      - password
    # otpPolicyType: totp
    # otpPolicyAlgorithm: HmacSHA1
    # otpPolicyInitialCounter: 0
    # otpPolicyDigits: 6
    # otpPolicyLookAheadWindow: 1
    # otpPolicyPeriod: 30
    # otpPolicyCodeReusable: false
    # otpSupportedApplications:
    #   - totpAppFreeOTPName
    #   - totpAppMicrosoftAuthenticatorName
    #   - totpAppGoogleName
    # webAuthnPolicyRpEntityName: keycloak
    # webAuthnPolicySignatureAlgorithms:
    #   - ES256
    # webAuthnPolicyRpId: ""
    # webAuthnPolicyAttestationConveyancePreference: not specified
    # webAuthnPolicyAuthenticatorAttachment: not specified
    # webAuthnPolicyRequireResidentKey: not specified
    # webAuthnPolicyUserVerificationRequirement: not specified
    # webAuthnPolicyCreateTimeout: 0
    # webAuthnPolicyAvoidSameAuthenticatorRegister: false
    # webAuthnPolicyAcceptableAaguids: []
    # webAuthnPolicyPasswordlessRpEntityName: keycloak
    # webAuthnPolicyPasswordlessSignatureAlgorithms:
    #   - ES256
    # webAuthnPolicyPasswordlessRpId: ""
    # webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
    # webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
    # webAuthnPolicyPasswordlessRequireResidentKey: not specified
    # webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
    # webAuthnPolicyPasswordlessCreateTimeout: 0
    # webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
    # webAuthnPolicyPasswordlessAcceptableAaguids: []
    users:
      - username: testuser
        enabled: true
        totp: false
        emailVerified: true
        firstName: test
        lastName: user
        email: test@test.de
        credentials:
          - type: password
            value: testuser
        disableableCredentialTypes: []
        requiredActions: []
        realmRoles:
        # change
          - default-roles-apptest
        notBefore: 0
        groups: []
    scopeMappings:
      - clientScope: offline_access
        roles:
          - offline_access
    clientScopeMappings:
      account:
        - client: account-console
          roles:
            - manage-account
            - view-groups
    clients:
      # - clientId: account
      #   name: ${client_account}
      #   rootUrl: ${authBaseUrl}
      #   # change
      #   baseUrl: /realms/apptest/account/
      #   surrogateAuthRequired: false
      #   enabled: true
      #   alwaysDisplayInConsole: false
      #   clientAuthenticatorType: client-secret
      #   redirectUris:
      #   # change
      #     - /realms/apptest/account/*
      #   webOrigins: []
      #   notBefore: 0
      #   bearerOnly: false
      #   consentRequired: false
      #   standardFlowEnabled: true
      #   implicitFlowEnabled: false
      #   directAccessGrantsEnabled: false
      #   serviceAccountsEnabled: false
      #   publicClient: true
      #   frontchannelLogout: false
      #   protocol: openid-connect
      #   attributes:
      #     post.logout.redirect.uris: +
      #   authenticationFlowBindingOverrides: {}
      #   fullScopeAllowed: false
      #   nodeReRegistrationTimeout: 0
      #   defaultClientScopes:
      #     - web-origins
      #     - acr
      #     - roles
      #     - profile
      #     - email
      #   optionalClientScopes:
      #     - address
      #     - phone
      #     - offline_access
      #     - microprofile-jwt
      # - clientId: account-console
      #   name: ${client_account-console}
      #   rootUrl: ${authBaseUrl}
      #   # change
      #   baseUrl: /realms/apptest/account/
      #   surrogateAuthRequired: false
      #   enabled: true
      #   alwaysDisplayInConsole: false
      #   clientAuthenticatorType: client-secret
      #   redirectUris:
      #   # change
      #     - /realms/apptest/account/*
      #   webOrigins: []
      #   notBefore: 0
      #   bearerOnly: false
      #   consentRequired: false
      #   standardFlowEnabled: true
      #   implicitFlowEnabled: false
      #   directAccessGrantsEnabled: false
      #   serviceAccountsEnabled: false
      #   publicClient: true
      #   frontchannelLogout: false
      #   protocol: openid-connect
      #   attributes:
      #     post.logout.redirect.uris: +
      #     pkce.code.challenge.method: S256
      #   authenticationFlowBindingOverrides: {}
      #   fullScopeAllowed: false
      #   nodeReRegistrationTimeout: 0
      #   protocolMappers:
      #     - name: audience resolve
      #       protocol: openid-connect
      #       protocolMapper: oidc-audience-resolve-mapper
      #       consentRequired: false
      #       config: {}
      #   defaultClientScopes:
      #     - web-origins
      #     - acr
      #     - roles
      #     - profile
      #     - email
      #   optionalClientScopes:
      #     - address
      #     - phone
      #     - offline_access
      #     - microprofile-jwt
      # - clientId: admin-cli
      #   name: ${client_admin-cli}
      #   surrogateAuthRequired: false
      #   enabled: true
      #   alwaysDisplayInConsole: false
      #   clientAuthenticatorType: client-secret
      #   redirectUris: []
      #   webOrigins: []
      #   notBefore: 0
      #   bearerOnly: false
      #   consentRequired: false
      #   standardFlowEnabled: false
      #   implicitFlowEnabled: false
      #   directAccessGrantsEnabled: true
      #   serviceAccountsEnabled: false
      #   publicClient: true
      #   frontchannelLogout: false
      #   protocol: openid-connect
      #   attributes: {}
      #   authenticationFlowBindingOverrides: {}
      #   fullScopeAllowed: false
      #   nodeReRegistrationTimeout: 0
      #   defaultClientScopes:
      #     - web-origins
      #     - acr
      #     - roles
      #     - profile
      #     - email
      #   optionalClientScopes:
      #     - address
      #     - phone
      #     - offline_access
      #     - microprofile-jwt
      # - clientId: broker
      #   name: ${client_broker}
      #   surrogateAuthRequired: false
      #   enabled: true
      #   alwaysDisplayInConsole: false
      #   clientAuthenticatorType: client-secret
      #   redirectUris: []
      #   webOrigins: []
      #   notBefore: 0
      #   bearerOnly: true
      #   consentRequired: false
      #   standardFlowEnabled: true
      #   implicitFlowEnabled: false
      #   directAccessGrantsEnabled: false
      #   serviceAccountsEnabled: false
      #   publicClient: false
      #   frontchannelLogout: false
      #   protocol: openid-connect
      #   attributes: {}
      #   authenticationFlowBindingOverrides: {}
      #   fullScopeAllowed: false
      #   nodeReRegistrationTimeout: 0
      #   defaultClientScopes:
      #     - web-origins
      #     - acr
      #     - roles
      #     - profile
      #     - email
      #   optionalClientScopes:
      #     - address
      #     - phone
      #     - offline_access
      #     - microprofile-jwt
      # - clientId: realm-management
      #   name: ${client_realm-management}
      #   surrogateAuthRequired: false
      #   enabled: true
      #   alwaysDisplayInConsole: false
      #   clientAuthenticatorType: client-secret
      #   redirectUris: []
      #   webOrigins: []
      #   notBefore: 0
      #   bearerOnly: true
      #   consentRequired: false
      #   standardFlowEnabled: true
      #   implicitFlowEnabled: false
      #   directAccessGrantsEnabled: false
      #   serviceAccountsEnabled: false
      #   publicClient: false
      #   frontchannelLogout: false
      #   protocol: openid-connect
      #   attributes: {}
      #   authenticationFlowBindingOverrides: {}
      #   fullScopeAllowed: false
      #   nodeReRegistrationTimeout: 0
      #   defaultClientScopes:
      #     - web-origins
      #     - acr
      #     - roles
      #     - profile
      #     - email
      #   optionalClientScopes:
      #     - address
      #     - phone
      #     - offline_access
      #     - microprofile-jwt
      # - clientId: security-admin-console
      #   name: ${client_security-admin-console}
      #   rootUrl: ${authAdminUrl}
      #   # change
      #   baseUrl: /admin/apptest/console/
      #   surrogateAuthRequired: false
      #   enabled: true
      #   alwaysDisplayInConsole: false
      #   clientAuthenticatorType: client-secret
      #   redirectUris:
      #   # change
      #     - /admin/apptest/console/*
      #   webOrigins:
      #     - +
      #   notBefore: 0
      #   bearerOnly: false
      #   consentRequired: false
      #   standardFlowEnabled: true
      #   implicitFlowEnabled: false
      #   directAccessGrantsEnabled: false
      #   serviceAccountsEnabled: false
      #   publicClient: true
      #   frontchannelLogout: false
      #   protocol: openid-connect
      #   attributes:
      #     post.logout.redirect.uris: +
      #     pkce.code.challenge.method: S256
      #   authenticationFlowBindingOverrides: {}
      #   fullScopeAllowed: false
      #   nodeReRegistrationTimeout: 0
      #   protocolMappers:
      #     - name: locale
      #       protocol: openid-connect
      #       protocolMapper: oidc-usermodel-attribute-mapper
      #       consentRequired: false
      #       config:
      #         userinfo.token.claim: "true"
      #         user.attribute: locale
      #         id.token.claim: "true"
      #         access.token.claim: "true"
      #         claim.name: locale
      #         jsonType.label: String
      #   defaultClientScopes:
      #     - web-origins
      #     - acr
      #     - roles
      #     - profile
      #     - email
      #   optionalClientScopes:
      #     - address
      #     - phone
      #     - offline_access
      #     - microprofile-jwt
      - clientId: whoami-oauth2-proxy
        name: ""
        description: ""
        rootUrl: ""
        adminUrl: ""
        baseUrl: ""
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: true
        clientAuthenticatorType: client-secret
        # change
        secret: 62CZFzirE2Yvs0m2CpuKBTv05r0MvjSu
        # change
        redirectUris:
          - http://whoami.test/oauth2/callback
        # change
        webOrigins:
          - http://whoami.test
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: true
        protocol: openid-connect
        attributes:
          oauth2.device.authorization.grant.enabled: "false"
          backchannel.logout.revoke.offline.tokens: "false"
          use.refresh.tokens: "true"
          tls-client-certificate-bound-access-tokens: "false"
          oidc.ciba.grant.enabled: "false"
          backchannel.logout.session.required: "true"
          client_credentials.use_refresh_token: "false"
          require.pushed.authorization.requests: "false"
          acr.loa.map: '{}'
          display.on.consent.screen: "false"
          token.response.type.bearer.lower-case: "false"
        authenticationFlowBindingOverrides: {}
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        protocolMappers:
          - name: aud-mapper-whoami-oauth2-proxy
            protocol: openid-connect
            protocolMapper: oidc-audience-mapper
            consentRequired: false
            config:
              # change
              included.client.audience: whoami-oauth2-proxy
              id.token.claim: "true"
              access.token.claim: "true"
          - name: groups
            protocol: openid-connect
            protocolMapper: oidc-group-membership-mapper
            consentRequired: false
            config:
              full.path: "false"
              id.token.claim: "false"
              access.token.claim: "false"
              claim.name: groups
              userinfo.token.claim: "false"
        defaultClientScopes:
          - web-origins
          - acr
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
    # clientScopes:
    #   - name: microprofile-jwt
    #     description: Microprofile - JWT built-in scope
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "true"
    #       display.on.consent.screen: "false"
    #     protocolMappers:
    #       - name: upn
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-property-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: username
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: upn
    #           jsonType.label: String
    #       - name: groups
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-realm-role-mapper
    #         consentRequired: false
    #         config:
    #           multivalued: "true"
    #           user.attribute: foo
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: groups
    #           jsonType.label: String
    #   - name: email
    #     description: 'OpenID Connect built-in scope: email'
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "true"
    #       display.on.consent.screen: "true"
    #       consent.screen.text: ${emailScopeConsentText}
    #     protocolMappers:
    #       - name: email verified
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-property-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: emailVerified
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: email_verified
    #           jsonType.label: boolean
    #       - name: email
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-property-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: email
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: email
    #           jsonType.label: String
    #   - name: acr
    #     description: OpenID Connect scope for add acr (authentication context class reference) to the token
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "false"
    #       display.on.consent.screen: "false"
    #     protocolMappers:
    #       - name: acr loa level
    #         protocol: openid-connect
    #         protocolMapper: oidc-acr-mapper
    #         consentRequired: false
    #         config:
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #   - name: phone
    #     description: 'OpenID Connect built-in scope: phone'
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "true"
    #       display.on.consent.screen: "true"
    #       consent.screen.text: ${phoneScopeConsentText}
    #     protocolMappers:
    #       - name: phone number verified
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: phoneNumberVerified
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: phone_number_verified
    #           jsonType.label: boolean
    #       - name: phone number
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: phoneNumber
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: phone_number
    #           jsonType.label: String
    #   - name: web-origins
    #     description: OpenID Connect scope for add allowed web origins to the access token
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "false"
    #       display.on.consent.screen: "false"
    #       consent.screen.text: ""
    #     protocolMappers:
    #       - name: allowed web origins
    #         protocol: openid-connect
    #         protocolMapper: oidc-allowed-origins-mapper
    #         consentRequired: false
    #         config: {}
    #   - name: roles
    #     description: OpenID Connect scope for add user roles to the access token
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "false"
    #       display.on.consent.screen: "true"
    #       consent.screen.text: ${rolesScopeConsentText}
    #     protocolMappers:
    #       - name: realm roles
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-realm-role-mapper
    #         consentRequired: false
    #         config:
    #           user.attribute: foo
    #           access.token.claim: "true"
    #           claim.name: realm_access.roles
    #           jsonType.label: String
    #           multivalued: "true"
    #       - name: client roles
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-client-role-mapper
    #         consentRequired: false
    #         config:
    #           user.attribute: foo
    #           access.token.claim: "true"
    #           claim.name: resource_access.${client_id}.roles
    #           jsonType.label: String
    #           multivalued: "true"
    #       - name: audience resolve
    #         protocol: openid-connect
    #         protocolMapper: oidc-audience-resolve-mapper
    #         consentRequired: false
    #         config: {}
    #   - name: offline_access
    #     description: 'OpenID Connect built-in scope: offline_access'
    #     protocol: openid-connect
    #     attributes:
    #       consent.screen.text: ${offlineAccessScopeConsentText}
    #       display.on.consent.screen: "true"
    #   - name: address
    #     description: 'OpenID Connect built-in scope: address'
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "true"
    #       display.on.consent.screen: "true"
    #       consent.screen.text: ${addressScopeConsentText}
    #     protocolMappers:
    #       - name: address
    #         protocol: openid-connect
    #         protocolMapper: oidc-address-mapper
    #         consentRequired: false
    #         config:
    #           user.attribute.formatted: formatted
    #           user.attribute.country: country
    #           user.attribute.postal_code: postal_code
    #           userinfo.token.claim: "true"
    #           user.attribute.street: street
    #           id.token.claim: "true"
    #           user.attribute.region: region
    #           access.token.claim: "true"
    #           user.attribute.locality: locality
    #   - name: role_list
    #     description: SAML role list
    #     protocol: saml
    #     attributes:
    #       consent.screen.text: ${samlRoleListScopeConsentText}
    #       display.on.consent.screen: "true"
    #     protocolMappers:
    #       - name: role list
    #         protocol: saml
    #         protocolMapper: saml-role-list-mapper
    #         consentRequired: false
    #         config:
    #           single: "false"
    #           attribute.nameformat: Basic
    #           attribute.name: Role
    #   - name: profile
    #     description: 'OpenID Connect built-in scope: profile'
    #     protocol: openid-connect
    #     attributes:
    #       include.in.token.scope: "true"
    #       display.on.consent.screen: "true"
    #       consent.screen.text: ${profileScopeConsentText}
    #     protocolMappers:
    #       - name: profile
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: profile
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: profile
    #           jsonType.label: String
    #       - name: picture
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: picture
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: picture
    #           jsonType.label: String
    #       - name: gender
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: gender
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: gender
    #           jsonType.label: String
    #       - name: website
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: website
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: website
    #           jsonType.label: String
    #       - name: family name
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-property-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: lastName
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: family_name
    #           jsonType.label: String
    #       - name: full name
    #         protocol: openid-connect
    #         protocolMapper: oidc-full-name-mapper
    #         consentRequired: false
    #         config:
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           userinfo.token.claim: "true"
    #       - name: birthdate
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: birthdate
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: birthdate
    #           jsonType.label: String
    #       - name: zoneinfo
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: zoneinfo
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: zoneinfo
    #           jsonType.label: String
    #       - name: username
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-property-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: username
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: preferred_username
    #           jsonType.label: String
    #       - name: nickname
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: nickname
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: nickname
    #           jsonType.label: String
    #       - name: middle name
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: middleName
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: middle_name
    #           jsonType.label: String
    #       - name: locale
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: locale
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: locale
    #           jsonType.label: String
    #       - name: updated at
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-attribute-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: updatedAt
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: updated_at
    #           jsonType.label: long
    #       - name: given name
    #         protocol: openid-connect
    #         protocolMapper: oidc-usermodel-property-mapper
    #         consentRequired: false
    #         config:
    #           userinfo.token.claim: "true"
    #           user.attribute: firstName
    #           id.token.claim: "true"
    #           access.token.claim: "true"
    #           claim.name: given_name
    #           jsonType.label: String
    # defaultDefaultClientScopes:
    #   - role_list
    #   - profile
    #   - email
    #   - roles
    #   - web-origins
    #   - acr
    # defaultOptionalClientScopes:
    #   - offline_access
    #   - address
    #   - phone
    #   - microprofile-jwt
    # browserSecurityHeaders:
    #   contentSecurityPolicyReportOnly: ""
    #   xContentTypeOptions: nosniff
    #   xRobotsTag: none
    #   xFrameOptions: SAMEORIGIN
    #   contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
    #   xXSSProtection: 1; mode=block
    #   strictTransportSecurity: max-age=31536000; includeSubDomains
    # smtpServer: {}
    # eventsEnabled: false
    # eventsListeners:
    #   - jboss-logging
    # enabledEventTypes: []
    # adminEventsEnabled: false
    # adminEventsDetailsEnabled: false
    # identityProviders: []
    # identityProviderMappers: []
    # components:
    #   org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
    #     - name: Allowed Client Scopes
    #       providerId: allowed-client-templates
    #       subType: authenticated
    #       subComponents: {}
    #       config:
    #         allow-default-scopes:
    #           - "true"
    #     - name: Allowed Client Scopes
    #       providerId: allowed-client-templates
    #       subType: anonymous
    #       subComponents: {}
    #       config:
    #         allow-default-scopes:
    #           - "true"
    #     - name: Allowed Protocol Mapper Types
    #       providerId: allowed-protocol-mappers
    #       subType: anonymous
    #       subComponents: {}
    #       config:
    #         allowed-protocol-mapper-types:
    #           - oidc-sha256-pairwise-sub-mapper
    #           - oidc-usermodel-attribute-mapper
    #           - saml-role-list-mapper
    #           - saml-user-attribute-mapper
    #           - oidc-full-name-mapper
    #           - oidc-usermodel-property-mapper
    #           - oidc-address-mapper
    #           - saml-user-property-mapper
    #     - name: Trusted Hosts
    #       providerId: trusted-hosts
    #       subType: anonymous
    #       subComponents: {}
    #       config:
    #         host-sending-registration-request-must-match:
    #           - "true"
    #         client-uris-must-match:
    #           - "true"
    #     - name: Consent Required
    #       providerId: consent-required
    #       subType: anonymous
    #       subComponents: {}
    #       config: {}
    #     - name: Max Clients Limit
    #       providerId: max-clients
    #       subType: anonymous
    #       subComponents: {}
    #       config:
    #         max-clients:
    #           - "200"
    #     - name: Full Scope Disabled
    #       providerId: scope
    #       subType: anonymous
    #       subComponents: {}
    #       config: {}
    #     - name: Allowed Protocol Mapper Types
    #       providerId: allowed-protocol-mappers
    #       subType: authenticated
    #       subComponents: {}
    #       config:
    #         allowed-protocol-mapper-types:
    #           - oidc-usermodel-property-mapper
    #           - oidc-full-name-mapper
    #           - saml-user-property-mapper
    #           - oidc-address-mapper
    #           - saml-user-attribute-mapper
    #           - oidc-sha256-pairwise-sub-mapper
    #           - oidc-usermodel-attribute-mapper
    #           - saml-role-list-mapper
    #   org.keycloak.keys.KeyProvider:
    #     - name: aes-generated
    #       providerId: aes-generated
    #       subComponents: {}
    #       config:
    #         kid:
    #           - f96b93a2-0cc5-4832-9aac-afeba6919b48
    #         secret:
    #           - eScESw1WyxBCssRFb_8sZw
    #         priority:
    #           - "100"
    #     - name: rsa-generated
    #       providerId: rsa-generated
    #       subComponents: {}
    #       config:
    #         privateKey:
    #           - MIIEpQIBAAKCAQEApBsCXR+LPfxZepeEtHGJfkb+OJKS76r83bXl6H9NjGR1Ul/44A49ouAo7sKgZDOsuKIhMumoaIAyzVmMqYhvHU2e00pbw+S1ASfvSxlpWPWn+360Bua9tazFlZbc4n3345Tr5pvjxq0ZlFruQExZiexpVP1swKMRrfXzfZRMxEBKNSfxJpUA+pXiBwTqsFYDYKt6IV0tmy7uHlz+CIJC33y1zIUBeW49N++WdIPfguriInx5hYh1ojB6/JRA6AOFTPn7wDjfQDQgONcQE+4/w97r10bjAiHeiixktg5Ya1GXM3Q9Lkuqn1CeKfiJcXwsClEfqlEP3xErio6+Jt8AsQIDAQABAoIBAAEXvy5Dc4dbgP8bnuqow0W372s+XdonhJ4LGjY5/gSR8a5wdG8Xg6VdaZGYrWBRvuysW90LBhTtchMAyzW0fFrubMrOR6BYS1wIoV68Zt8gaaTjwMZU6b5ycEAnPEXiXfg6qZ5TBTqiqpBX0YNKXaHi94dI/R0JWi2wn3Lv1oFBzauP+5bNCcl/E/Q0K4Ky83n76SOhlvSqU0iwUlDYpkZqXKGEFWtX48W+7v/KgNufWnqx6GHkbt64mZDCuW+EIbf7TifNmMHs6T2poVWIgIG2ftCL7VSLHySCMY58aUp+SsY2EyaH81cTCLmF0+YhEVEXRQIqfSuOp7IE5SNi690CgYEA464QCqA90YbhPONo8lF8ynzkQPhDdg4pEbKkfOu9pQL9UfzxYQB7Z/3U+JXN0nC3DUiOEOMjB1AX6wILkzVH1AKTulGGkNDqldAhrq2ed/kMCGS6KtCHwTkciiNppvvAnOrNvezmZ0jlFyVJhJGq2ebmDn9RCuuc5pzeIYzILgUCgYEAuISRI47OPRfMqFuuo310MCPRqjeB5w1h8Z7uWI9qLFvY/YTFPq+0r4OUlwPEjM+n6OcyQ4Y5E/tuKfHbpeW017QiMh3sVY0jsmQLzmQj60Tk95Ibh8gbjnfAF7kv1Bz5c7u0JjVvT56Iy6FBg9sn2BYZ4xPl6OEZ2bOp6KPYm70CgYEAnBYblz1NxBQE3BpHO0CUHblLPiM1FH0WuLRQwfdXdwW6pveSf162O4+v7o+8n9V4GNox0u/0drH5A7rONqhjSrxNjIERkLw45mXegYMzTapmDmcHngyB1PyTTTyD1N9op+rtC5SaTBqUO67rXMAEcggylaPA6oymbw8B1dxO7AUCgYEAoxEVK3WDMl6cEZWkyvuN+RVOr72KYeVjz6MDROTJkhZBuBrkLjgd2JbSdHtx8nd6DsxzkVVHkC899ne2A/DzV0XsipoDSMAI8hiUjnvVepBSQbCv/9mK8OdHri+M40oP8oXJ+ZJzosuaXUtPmPXPSpqNmi71mk+FBu5OlDhor4kCgYEA0UQ3yXDpVTo2Abxk+SrXOiZ9rE+7rGI80h1o4xWpDslGcS9qBLFM4AqFc5ze+TsFPazPj+2BnUQD7/u4vNkDwgOOIEIKk8Lh1P6uqrWHXTwxmY/FkkKnRDd5lvpHaGaZIlOlQx+e4wZt8LSnYBtAJHzdTT3fTX2GQkpiVUEKFd8=
    #         keyUse:
    #           - SIG
    #         certificate:
    #           - MIIClzCCAX8CBgGGy4ob0DANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIzMDMxMDEyMzkzMVoXDTMzMDMxMDEyNDExMVowDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQbAl0fiz38WXqXhLRxiX5G/jiSku+q/N215eh/TYxkdVJf+OAOPaLgKO7CoGQzrLiiITLpqGiAMs1ZjKmIbx1NntNKW8PktQEn70sZaVj1p/t+tAbmvbWsxZWW3OJ99+OU6+ab48atGZRa7kBMWYnsaVT9bMCjEa31832UTMRASjUn8SaVAPqV4gcE6rBWA2CreiFdLZsu7h5c/giCQt98tcyFAXluPTfvlnSD34Lq4iJ8eYWIdaIwevyUQOgDhUz5+8A430A0IDjXEBPuP8Pe69dG4wIh3oosZLYOWGtRlzN0PS5Lqp9Qnin4iXF8LApRH6pRD98RK4qOvibfALECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAeItrZhS5da4AgvIyyOtP4VlHTaLiK6L1b8aZqLzt6wfCc24c0SEkaIhIOcsv2z3D9kAapAtt2DcW58kjysfsN57xb7FcKdlSwI3qi+Bp6Jf7wbZm9Dj2RVjD9JBfh8IeNvKOfKnJ71UlY/U89ldFKcxeqyg1Mvo/8t5aPo1adOS78wd92cIo7M8NGv04aSiBsLH8oIxl/m/YOk6+lZKZhpv+pAm3Dib2ZuBJXOq3Leh9MNiuvWSEgOcbkQbbesFqywKei0UsqX63yWSIuzxttO2a4TWJBtRDTjui9Kjcm+XSmiFSvleiaX4sYTND4/qgx5GCIe5vW2+MBYXI5Nv0+Q==
    #         priority:
    #           - "100"
    #     - name: rsa-enc-generated
    #       providerId: rsa-enc-generated
    #       subComponents: {}
    #       config:
    #         privateKey:
    #           - MIIEpAIBAAKCAQEAvVLnCt+M3TKAEa4EdijQAOT9JDO6EjZnVKTEdsS5QAeY7J58oOWioFOB1hQ7q8GEIIL6rU7VJaaDBePMCoNoZBW6ub7lgGYXQ2lGf2Ud/JGnP7Aq3/yOx7s6BjQJ8enQxLdkOKKI4wq271RgYtdAyZOYmlnSe4ZA4ukinGZ+S1uUUy8tUvxiafLdgvJPOJEAvuu77tCT2CW8KluXOIRPV/JWCGFcziX+KmMlbfEurxtGw+f51p4q5rj7ydf3w5lFwJf9t33LUTiLgNT2JqvC/f8YS9xLYPnLk6hUnKMBZJ8j2Y0jEdH6TwHpzdk2AZkylGeYuUGLgFjAuGxe1uVyXQIDAQABAoIBAEYxOGv1mhpgoM7tP8Y3N3c9bwU/EFu0Q/dD53tJUI2Gw5Hm6LoWqYbbryWZ9s2lP8F2Dk63DZuZ8rX6USoMsmV5EPPQ7PH/59wcagDNkqKTtfiM7jiBQMaYidjG7nD8iWSFweilii7zSAPPurSqreCOkmOXrcwSaHg4i5aFAYoaU8YbfI2vJjmuQsbEZLtrW3/z4InAw8Lo03WHczbfkQMTdJHqSGghcl2R5/CPclO9ugOdsHD4M4znaXZ35Hdf5iCFaCWGddz0h2sm4ZPA6GwPvwXghVF2/a+5rYB35hIL9Xu8GJKvbq3LiLig4Fd01o6ohDARfTZQopxqzuYB9lkCgYEA9pHZWJ8JKFB0pH+T4tPKq/rtpQX3RSBoYOaw0tjFQGBJBqAx33oPKdSxnU6X8/8q/AVJj/T4w+CFMkKlXpDYnktbrVtaIbUP2y7g0RkuqXPJTNdai9nHcl13/Ryo3NGYE0ZFUKMU3MInLI7CNbkg1GFiVTPxzXgHMOU6NLOKf7MCgYEAxJCP5cI4AYNqU4KxWIZnek0yZ8P7Ecgl+TwtUchhT8xapz2MaY8SBRV8NFYkNBmyaDBNwCRaMSyl4vaBT/tZ6e9JqpQ/MEkMTR4yzeS7HKX1tE0g7qUChlGRUmYmSEqal7YYbbOfPhJs+Kq6caqWsKMW7xn0Yg5+hOCwHgjLva8CgYBYA+QT0GFSdLXOaoP9uiBkl6Pw/lov4Muhm3ePLDXtLvGiXdivr0BubDAiuQVg4bsUT0bdDlMmiKTDNisVwJqylq/ZB/z6f0lzsh4qRdT0RBKdTVpTBaA+YMMOJQbaHC8u4iyoBi7SRrP5IdSNnNHtPf398Bbmg2v9tjW6zkQoJQKBgQCRnBU8ulcKp/MH0fTWAxp8etswCvnd/kpDCtT3lFyh5FvzL6DoQVez9GqByp4fCjoi/EVcZJF7g/uO2dSJD0VYCi6j8hWtCy/VoN05sIr7eeU9nzUaE5p/LcVdKNaLDtjeMcJ+4WTBcpzOyIo80YW3a9j9XliumtYWUOumFBX5eQKBgQCVutBEuMj7JsdmiclQl02KJPRpZh7eaYGUZpxsQ3c1/OLWzTrZ1pQ4Cx6fRSP+5Z8yVrPr0nLhogvFRab1BmEkqPoFrUYwEu2Zhlo8rVUA+r4lK5dORqE+Xp7BbokRP7VSbS18arvPGJTXs8cUiXDXRwWkZikTyu6aGgtX2uM1qA==
    #         keyUse:
    #           - ENC
    #         certificate:
    #           - MIIClzCCAX8CBgGGy4odWjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIzMDMxMDEyMzkzMVoXDTMzMDMxMDEyNDExMVowDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL1S5wrfjN0ygBGuBHYo0ADk/SQzuhI2Z1SkxHbEuUAHmOyefKDloqBTgdYUO6vBhCCC+q1O1SWmgwXjzAqDaGQVurm+5YBmF0NpRn9lHfyRpz+wKt/8jse7OgY0CfHp0MS3ZDiiiOMKtu9UYGLXQMmTmJpZ0nuGQOLpIpxmfktblFMvLVL8Ymny3YLyTziRAL7ru+7Qk9glvCpblziET1fyVghhXM4l/ipjJW3xLq8bRsPn+daeKua4+8nX98OZRcCX/bd9y1E4i4DU9iarwv3/GEvcS2D5y5OoVJyjAWSfI9mNIxHR+k8B6c3ZNgGZMpRnmLlBi4BYwLhsXtblcl0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAksA1kuBwfb5fExS0x8CZq5vx58Cu4/f9P7ZBP88RyVdLvs7qzk+HjezszrKuPgLdjDG3tExdj3mE6a0/DCKfnv+jBjM6CsEIUd/Mh1R6ebtdRFeG/lucUvUzj6G83SZByxPiUZrHPpnN8l+Tub012ooA0EDQAFP8EbBxCjDxiuy4MpYe8GCfO3NB5CnTgt/4Owb/msovKHqeZ7msKAikvLcjpzfltOh//Ku51lwSQ2enBQdewl/Lkh1cOZm33CrLlB6kBGbzyLvLASgQl+kJR8a2mElsocBls+Rpm6eRroOm8Db1XsPs1ZOmQ97m9Z2wYGXHfuHF5t7+Bd1FK/8YTA==
    #         priority:
    #           - "100"
    #         algorithm:
    #           - RSA-OAEP
    #     - name: hmac-generated
    #       providerId: hmac-generated
    #       subComponents: {}
    #       config:
    #         kid:
    #           - 03a42c2a-5ecc-488b-90cf-a432591c478c
    #         secret:
    #           - 15jcbgAlmPUY72Dxlq6KuBo0LqAz4MaYYexljQ7W25O98PaQn68s_wunbF9DA1Kto4mk7tN4AdN6icQhmkghNQ
    #         priority:
    #           - "100"
    #         algorithm:
    #           - HS256
    # internationalizationEnabled: false
    # supportedLocales: []
    authenticationFlows:
      - alias: Account verification options
        description: Method with which to verity the existing account
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-email-verification
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: true
            flowAlias: Verify Existing Account by Re-authentication
            userSetupAllowed: false
      - alias: Authentication Options
        description: Authentication options.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: basic-auth
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: basic-auth-otp
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: Browser - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: Direct Grant - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-otp
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: First broker login - Conditional OTP
        description: Flow to determine if the OTP is required for the authentication
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: Handle Existing Account
        description: Handle what to do if there is existing account with same email/username like authenticated identity provider
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-confirm-link
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: Account verification options
            userSetupAllowed: false
      - alias: Reset - Conditional OTP
        description: Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-otp
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: User creation or linking
        description: Flow for the existing/non-existing user alternatives
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticatorConfig: create unique user config
            authenticator: idp-create-user-if-unique
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: true
            flowAlias: Handle Existing Account
            userSetupAllowed: false
      - alias: Verify Existing Account by Re-authentication
        description: Reauthentication of existing account
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: idp-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 20
            autheticatorFlow: true
            flowAlias: First broker login - Conditional OTP
            userSetupAllowed: false
      - alias: browser
        description: browser based authentication
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 25
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: true
            flowAlias: forms
            userSetupAllowed: false
      - alias: clients
        description: Base authentication for clients
        providerId: client-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: client-secret
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-secret-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-x509
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: direct grant
        description: OpenID Connect Resource Owner Grant
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: direct-grant-validate-username
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 30
            autheticatorFlow: true
            flowAlias: Direct Grant - Conditional OTP
            userSetupAllowed: false
      - alias: docker auth
        description: Used by Docker clients to authenticate against the IDP
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: docker-http-basic-authenticator
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: first broker login
        description: Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticatorConfig: review profile config
            authenticator: idp-review-profile
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: User creation or linking
            userSetupAllowed: false
      - alias: forms
        description: Username, password, otp and other auth forms.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 20
            autheticatorFlow: true
            flowAlias: Browser - Conditional OTP
            userSetupAllowed: false
      - alias: http challenge
        description: An authentication flow based on challenge-response HTTP Authentication Schemes
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: no-cookie-redirect
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: true
            flowAlias: Authentication Options
            userSetupAllowed: false
      - alias: registration
        description: registration flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-page-form
            authenticatorFlow: true
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: true
            flowAlias: registration form
            userSetupAllowed: false
      - alias: registration form
        description: registration form
        providerId: form-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-user-creation
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-profile-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-password-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 50
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-recaptcha-action
            authenticatorFlow: false
            requirement: DISABLED
            priority: 60
            autheticatorFlow: false
            userSetupAllowed: false
      - alias: reset credentials
        description: Reset credentials for a user if they forgot their password or something
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: reset-credentials-choose-user
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-credential-email
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: CONDITIONAL
            priority: 40
            autheticatorFlow: true
            flowAlias: Reset - Conditional OTP
            userSetupAllowed: false
      - alias: saml ecp
        description: SAML ECP Profile Authentication Flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: http-basic-authenticator
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
    authenticatorConfig:
      - alias: create unique user config
        config:
          require.password.update.after.registration: "false"
      - alias: review profile config
        config:
          update.profile.on.first.login: missing
    requiredActions:
      - alias: CONFIGURE_TOTP
        name: Configure OTP
        providerId: CONFIGURE_TOTP
        enabled: true
        defaultAction: false
        priority: 10
        config: {}
      - alias: TERMS_AND_CONDITIONS
        name: Terms and Conditions
        providerId: TERMS_AND_CONDITIONS
        enabled: false
        defaultAction: false
        priority: 20
        config: {}
      - alias: UPDATE_PASSWORD
        name: Update Password
        providerId: UPDATE_PASSWORD
        enabled: true
        defaultAction: false
        priority: 30
        config: {}
      - alias: UPDATE_PROFILE
        name: Update Profile
        providerId: UPDATE_PROFILE
        enabled: true
        defaultAction: false
        priority: 40
        config: {}
      - alias: VERIFY_EMAIL
        name: Verify Email
        providerId: VERIFY_EMAIL
        enabled: true
        defaultAction: false
        priority: 50
        config: {}
      - alias: delete_account
        name: Delete Account
        providerId: delete_account
        enabled: false
        defaultAction: false
        priority: 60
        config: {}
      - alias: webauthn-register
        name: Webauthn Register
        providerId: webauthn-register
        enabled: true
        defaultAction: false
        priority: 70
        config: {}
      - alias: webauthn-register-passwordless
        name: Webauthn Register Passwordless
        providerId: webauthn-register-passwordless
        enabled: true
        defaultAction: false
        priority: 80
        config: {}
      - alias: update_user_locale
        name: Update User Locale
        providerId: update_user_locale
        enabled: true
        defaultAction: false
        priority: 1000
        config: {}
    browserFlow: browser
    registrationFlow: registration
    directGrantFlow: direct grant
    resetCredentialsFlow: reset credentials
    clientAuthenticationFlow: clients
    dockerAuthenticationFlow: docker auth
    attributes:
      cibaBackchannelTokenDeliveryMode: poll
      cibaExpiresIn: "120"
      cibaAuthRequestedUserHint: login_hint
      oauth2DeviceCodeLifespan: "600"
      oauth2DevicePollingInterval: "5"
      parRequestUriLifespan: "60"
      cibaInterval: "5"
      realmReusableOtpCode: "false"
    keycloakVersion: 21.0.1
    userManagedAccessAllowed: false
    clientProfiles:
      profiles: []
    clientPolicies:
      policies: []
    