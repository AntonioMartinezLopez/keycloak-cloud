{
  "id" : "a7dd67d6-a0c9-4eb0-b351-ce9404774b9b",
  "realm" : "test",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "648dc985-d5b2-4de6-af81-073aee61c695",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "a7dd67d6-a0c9-4eb0-b351-ce9404774b9b",
      "attributes" : { }
    }, {
      "id" : "469a55df-f12a-4529-884c-090f38199a8f",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "a7dd67d6-a0c9-4eb0-b351-ce9404774b9b",
      "attributes" : { }
    }, {
      "id" : "9c7d39a7-a09b-400f-a856-6cfad24dc42f",
      "name" : "default-roles-test",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "a7dd67d6-a0c9-4eb0-b351-ce9404774b9b",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "51faa234-0e9c-4450-8199-0b31dec76818",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "97960688-cb66-4853-9831-4ef1c9cbb009",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "de65db5d-7c05-49c4-a777-f7af6d3ca95a",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "2f625405-3a23-461e-90bf-31426021edfd",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "5295729e-dbc4-4087-9712-ef5648598a7f",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "82b72940-254c-409b-a036-5d0285654bfc",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "fcd40f08-2a2e-4c8a-a45b-d0dd5f377941",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "74b0b7aa-b29d-4d50-a58c-d8e7448bc3f7",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "3ef36312-6eb4-4e29-a96c-199dfde29d9a",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "view-authorization", "manage-realm", "view-identity-providers", "query-clients", "manage-authorization", "create-client", "manage-identity-providers", "view-events", "manage-users", "manage-events", "impersonation", "view-clients", "view-users", "query-users", "view-realm", "manage-clients", "query-realms" ]
          }
        },
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "bfd149c1-cb48-46a2-9772-cf0c1179cb06",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "5f01d337-c5be-4a16-bbb9-81e4145d872e",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "b8956d8b-bd48-4f9d-aaab-9575d81fb54f",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "a127332a-4e47-431d-a178-9de14160ab79",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "e9d73b20-3f6d-4fef-beba-d463fa19b636",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "8c3292e6-9338-4074-a195-62a4feab5b68",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "26dcc8a9-6255-43ae-9717-854c0ffaf716",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "6d1b2f58-28ef-472c-b725-92121d47b502",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "c15d3554-b9c1-464d-bb63-ea98cc6a99df",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      }, {
        "id" : "ba8956a0-332a-4f6c-8fc6-8241cc164251",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "whoami-oauth2-proxy" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "ffbf55c8-89d3-401b-b637-a0f871f716b3",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d92d00d7-e0cc-4005-a37f-b6681d521e54",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "bba320ba-e8d2-447c-b737-64d202e586b3",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "ff069141-1e72-408c-b67d-1b5cde478f01",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "dab88e37-6022-48e9-b43b-d5e9372c8990",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "0d39b5d7-4c23-4608-b85a-43b19c3c87b2",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "ac38e545-567e-4311-b7be-6fb405549fb4",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "60424dfb-1eca-4323-816f-4c9fdb0c5aea",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "a163fca7-0f95-467c-8125-69d451d99d82",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      }, {
        "id" : "2ade8637-4f4e-45fa-b319-b0198a683a21",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "adbfd2bb-7f96-42aa-a5dd-34215bf7ac14",
    "name" : "app1",
    "path" : "/app1",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { },
    "subGroups" : [ ]
  } ],
  "defaultRole" : {
    "id" : "9c7d39a7-a09b-400f-a856-6cfad24dc42f",
    "name" : "default-roles-test",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "a7dd67d6-a0c9-4eb0-b351-ce9404774b9b"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppMicrosoftAuthenticatorName", "totpAppGoogleName" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "ddf4db17-7053-4ec5-b619-1eb99a240767",
    "createdTimestamp" : 1678454478444,
    "username" : "testuser",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "test",
    "lastName" : "user",
    "email" : "test@test.de",
    "credentials" : [ {
      "id" : "75b8976f-da98-4d63-99b4-66a574a3b3eb",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1678809072357,
      "secretData" : "{\"value\":\"EXKSqyzmqA0CgGLEff2DzWQ1jaJUq7SeFjwlYySIDbQ=\",\"salt\":\"ThtLlWEaWJEKrXZEeRjcog==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-test" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "41826b2b-4dde-4564-9dde-ef5ce386d179",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/test/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/test/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "9e0429da-1d16-490d-90a9-02adc1deb5da",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/test/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/test/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "52abd7de-2ed3-4486-bae4-7fdee7a0bdc7",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a19621ec-0caf-43e2-899d-3fa98c66ef63",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d92d00d7-e0cc-4005-a37f-b6681d521e54",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "9a8f4893-e060-40ee-82ae-df58a484ae09",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "8e3f722a-95d6-4aff-9ad0-4882e3af9361",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/test/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/test/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "3b78c402-af8e-4930-86c7-a4f41629484b",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "2e642ab0-248b-427f-b791-207578a76ef1",
    "clientId" : "whoami-oauth2-proxy",
    "name" : "",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "TOr5hVFEtRycUvP1stRLiJ9gE7eskLeM",
    "redirectUris" : [ "http://whoami.com/oauth2/callback" ],
    "webOrigins" : [ "http://whoami.com" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1678453011",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "tls-client-certificate-bound-access-tokens" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "acr.loa.map" : "{}",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "60721be5-979a-42f4-97cf-27f40657af6c",
      "name" : "aud-mapper-whoami-oauth2-proxy",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "whoami-oauth2-proxy",
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "ba59fde2-5f44-480f-8795-3f087fd2134b",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-group-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "full.path" : "false",
        "id.token.claim" : "false",
        "access.token.claim" : "false",
        "claim.name" : "groups",
        "userinfo.token.claim" : "false"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "23d67c56-a496-499d-925b-77d50c61c1e2",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "350857f6-a5fd-4da0-9e63-0efb3e2ca2b3",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cd09010b-8b2c-4764-bf24-dd165f50de48",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "cc3205b9-0368-4a88-913e-8781b9712f57",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "24c269f3-c175-4841-a068-f274b67b9459",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "42182690-c428-42f5-9952-3b3c40ba58d8",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "f775ab6f-997c-4192-b38b-ed3966de511e",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0b0ec2a4-b76c-4a0d-842d-1446652b0ed9",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e6f508aa-9d2e-4cc9-b7fd-b4b39003907b",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "3108e42a-097b-496e-97e2-d03be7500abb",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "14f3b54c-2f04-406a-b3f5-e96b8b609879",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c5a18890-b2e6-4bbb-9865-16516d148883",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "7e05fcbf-3ecd-452b-8060-3e927373af34",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "f61acc8c-f18e-4afb-b2d7-98cf7527a061",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "1f61d101-d2a6-4893-be9d-e61b863eb81e",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "80f5f637-78ef-48f9-8e4a-dad8f096fe01",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "b30d29bb-9a27-4615-b818-f86ffea01262",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "9db7ee6c-e5df-423a-8381-f5f1f4d51507",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "50996907-9be5-4e8b-984e-4ec54e8686f0",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "fdf8a252-5d78-4ad8-a9da-f3b38143d7e0",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "e585aa27-34ff-471b-9713-92b5e92fa741",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "605f7a1e-091d-455c-a8b6-e34923514e88",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "7a6bc25b-4a9a-44a8-9d41-e54ac57b59cc",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "7a4ed956-55eb-4e79-a2af-109f095a95cf",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "50856010-18e8-4ec5-b20c-62c23acf2229",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "55cd2e02-5c0c-4ce4-8aef-37577ed2acd4",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "040b4273-c663-4c59-8051-d0521d3cfdf0",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "45b40b63-e38a-4f79-8786-64d255cad92d",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1d4a8903-b2c6-476d-a637-86e502e41da0",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "6a26c785-b299-49b7-843d-99acbf768539",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "47d04bdd-eff7-40f9-bc7b-5a10632624ce",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5bd317e5-2280-4c09-9d6c-cf7908b58d9d",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0e6237f7-dd58-4cfd-89cd-2003a019f4d3",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bcd80232-30f5-4ef2-b5c9-aa401120efee",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fac2faad-ab69-44c0-a739-0e7a090c607e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ee6caf70-db16-460f-9d1a-c898b6416882",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "7e9ad0ef-31e5-4e6c-b5d5-4ce03bf00073",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "cba4502e-41ac-4292-8ac8-232cd28f67a7",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "7759a360-b81f-4e37-8b27-a1cb2aa064b5",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "53407168-bb34-474e-ba77-d7b3b569c535",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "38d6c1a4-49cc-4052-95d2-d617fb930500",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "05234312-ed64-47f1-b798-692df1899028",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "dca4c277-96b2-464f-a498-fa152ee34bed",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "26318c08-ca49-4d49-a946-a78e69d0395b",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "18ffb4e5-d263-4f1b-b42f-7325a6761062",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-role-list-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "fa55aa33-d663-4ee8-8efb-dd8f62b2f372",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "f96b93a2-0cc5-4832-9aac-afeba6919b48" ],
        "secret" : [ "eScESw1WyxBCssRFb_8sZw" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "bf4e5af8-4fcf-443a-a8ec-f58e50b90bb8",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEApBsCXR+LPfxZepeEtHGJfkb+OJKS76r83bXl6H9NjGR1Ul/44A49ouAo7sKgZDOsuKIhMumoaIAyzVmMqYhvHU2e00pbw+S1ASfvSxlpWPWn+360Bua9tazFlZbc4n3345Tr5pvjxq0ZlFruQExZiexpVP1swKMRrfXzfZRMxEBKNSfxJpUA+pXiBwTqsFYDYKt6IV0tmy7uHlz+CIJC33y1zIUBeW49N++WdIPfguriInx5hYh1ojB6/JRA6AOFTPn7wDjfQDQgONcQE+4/w97r10bjAiHeiixktg5Ya1GXM3Q9Lkuqn1CeKfiJcXwsClEfqlEP3xErio6+Jt8AsQIDAQABAoIBAAEXvy5Dc4dbgP8bnuqow0W372s+XdonhJ4LGjY5/gSR8a5wdG8Xg6VdaZGYrWBRvuysW90LBhTtchMAyzW0fFrubMrOR6BYS1wIoV68Zt8gaaTjwMZU6b5ycEAnPEXiXfg6qZ5TBTqiqpBX0YNKXaHi94dI/R0JWi2wn3Lv1oFBzauP+5bNCcl/E/Q0K4Ky83n76SOhlvSqU0iwUlDYpkZqXKGEFWtX48W+7v/KgNufWnqx6GHkbt64mZDCuW+EIbf7TifNmMHs6T2poVWIgIG2ftCL7VSLHySCMY58aUp+SsY2EyaH81cTCLmF0+YhEVEXRQIqfSuOp7IE5SNi690CgYEA464QCqA90YbhPONo8lF8ynzkQPhDdg4pEbKkfOu9pQL9UfzxYQB7Z/3U+JXN0nC3DUiOEOMjB1AX6wILkzVH1AKTulGGkNDqldAhrq2ed/kMCGS6KtCHwTkciiNppvvAnOrNvezmZ0jlFyVJhJGq2ebmDn9RCuuc5pzeIYzILgUCgYEAuISRI47OPRfMqFuuo310MCPRqjeB5w1h8Z7uWI9qLFvY/YTFPq+0r4OUlwPEjM+n6OcyQ4Y5E/tuKfHbpeW017QiMh3sVY0jsmQLzmQj60Tk95Ibh8gbjnfAF7kv1Bz5c7u0JjVvT56Iy6FBg9sn2BYZ4xPl6OEZ2bOp6KPYm70CgYEAnBYblz1NxBQE3BpHO0CUHblLPiM1FH0WuLRQwfdXdwW6pveSf162O4+v7o+8n9V4GNox0u/0drH5A7rONqhjSrxNjIERkLw45mXegYMzTapmDmcHngyB1PyTTTyD1N9op+rtC5SaTBqUO67rXMAEcggylaPA6oymbw8B1dxO7AUCgYEAoxEVK3WDMl6cEZWkyvuN+RVOr72KYeVjz6MDROTJkhZBuBrkLjgd2JbSdHtx8nd6DsxzkVVHkC899ne2A/DzV0XsipoDSMAI8hiUjnvVepBSQbCv/9mK8OdHri+M40oP8oXJ+ZJzosuaXUtPmPXPSpqNmi71mk+FBu5OlDhor4kCgYEA0UQ3yXDpVTo2Abxk+SrXOiZ9rE+7rGI80h1o4xWpDslGcS9qBLFM4AqFc5ze+TsFPazPj+2BnUQD7/u4vNkDwgOOIEIKk8Lh1P6uqrWHXTwxmY/FkkKnRDd5lvpHaGaZIlOlQx+e4wZt8LSnYBtAJHzdTT3fTX2GQkpiVUEKFd8=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIIClzCCAX8CBgGGy4ob0DANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIzMDMxMDEyMzkzMVoXDTMzMDMxMDEyNDExMVowDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQbAl0fiz38WXqXhLRxiX5G/jiSku+q/N215eh/TYxkdVJf+OAOPaLgKO7CoGQzrLiiITLpqGiAMs1ZjKmIbx1NntNKW8PktQEn70sZaVj1p/t+tAbmvbWsxZWW3OJ99+OU6+ab48atGZRa7kBMWYnsaVT9bMCjEa31832UTMRASjUn8SaVAPqV4gcE6rBWA2CreiFdLZsu7h5c/giCQt98tcyFAXluPTfvlnSD34Lq4iJ8eYWIdaIwevyUQOgDhUz5+8A430A0IDjXEBPuP8Pe69dG4wIh3oosZLYOWGtRlzN0PS5Lqp9Qnin4iXF8LApRH6pRD98RK4qOvibfALECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAeItrZhS5da4AgvIyyOtP4VlHTaLiK6L1b8aZqLzt6wfCc24c0SEkaIhIOcsv2z3D9kAapAtt2DcW58kjysfsN57xb7FcKdlSwI3qi+Bp6Jf7wbZm9Dj2RVjD9JBfh8IeNvKOfKnJ71UlY/U89ldFKcxeqyg1Mvo/8t5aPo1adOS78wd92cIo7M8NGv04aSiBsLH8oIxl/m/YOk6+lZKZhpv+pAm3Dib2ZuBJXOq3Leh9MNiuvWSEgOcbkQbbesFqywKei0UsqX63yWSIuzxttO2a4TWJBtRDTjui9Kjcm+XSmiFSvleiaX4sYTND4/qgx5GCIe5vW2+MBYXI5Nv0+Q==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "08228c21-a0ac-4760-b1b6-c7b3f46f8b76",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAvVLnCt+M3TKAEa4EdijQAOT9JDO6EjZnVKTEdsS5QAeY7J58oOWioFOB1hQ7q8GEIIL6rU7VJaaDBePMCoNoZBW6ub7lgGYXQ2lGf2Ud/JGnP7Aq3/yOx7s6BjQJ8enQxLdkOKKI4wq271RgYtdAyZOYmlnSe4ZA4ukinGZ+S1uUUy8tUvxiafLdgvJPOJEAvuu77tCT2CW8KluXOIRPV/JWCGFcziX+KmMlbfEurxtGw+f51p4q5rj7ydf3w5lFwJf9t33LUTiLgNT2JqvC/f8YS9xLYPnLk6hUnKMBZJ8j2Y0jEdH6TwHpzdk2AZkylGeYuUGLgFjAuGxe1uVyXQIDAQABAoIBAEYxOGv1mhpgoM7tP8Y3N3c9bwU/EFu0Q/dD53tJUI2Gw5Hm6LoWqYbbryWZ9s2lP8F2Dk63DZuZ8rX6USoMsmV5EPPQ7PH/59wcagDNkqKTtfiM7jiBQMaYidjG7nD8iWSFweilii7zSAPPurSqreCOkmOXrcwSaHg4i5aFAYoaU8YbfI2vJjmuQsbEZLtrW3/z4InAw8Lo03WHczbfkQMTdJHqSGghcl2R5/CPclO9ugOdsHD4M4znaXZ35Hdf5iCFaCWGddz0h2sm4ZPA6GwPvwXghVF2/a+5rYB35hIL9Xu8GJKvbq3LiLig4Fd01o6ohDARfTZQopxqzuYB9lkCgYEA9pHZWJ8JKFB0pH+T4tPKq/rtpQX3RSBoYOaw0tjFQGBJBqAx33oPKdSxnU6X8/8q/AVJj/T4w+CFMkKlXpDYnktbrVtaIbUP2y7g0RkuqXPJTNdai9nHcl13/Ryo3NGYE0ZFUKMU3MInLI7CNbkg1GFiVTPxzXgHMOU6NLOKf7MCgYEAxJCP5cI4AYNqU4KxWIZnek0yZ8P7Ecgl+TwtUchhT8xapz2MaY8SBRV8NFYkNBmyaDBNwCRaMSyl4vaBT/tZ6e9JqpQ/MEkMTR4yzeS7HKX1tE0g7qUChlGRUmYmSEqal7YYbbOfPhJs+Kq6caqWsKMW7xn0Yg5+hOCwHgjLva8CgYBYA+QT0GFSdLXOaoP9uiBkl6Pw/lov4Muhm3ePLDXtLvGiXdivr0BubDAiuQVg4bsUT0bdDlMmiKTDNisVwJqylq/ZB/z6f0lzsh4qRdT0RBKdTVpTBaA+YMMOJQbaHC8u4iyoBi7SRrP5IdSNnNHtPf398Bbmg2v9tjW6zkQoJQKBgQCRnBU8ulcKp/MH0fTWAxp8etswCvnd/kpDCtT3lFyh5FvzL6DoQVez9GqByp4fCjoi/EVcZJF7g/uO2dSJD0VYCi6j8hWtCy/VoN05sIr7eeU9nzUaE5p/LcVdKNaLDtjeMcJ+4WTBcpzOyIo80YW3a9j9XliumtYWUOumFBX5eQKBgQCVutBEuMj7JsdmiclQl02KJPRpZh7eaYGUZpxsQ3c1/OLWzTrZ1pQ4Cx6fRSP+5Z8yVrPr0nLhogvFRab1BmEkqPoFrUYwEu2Zhlo8rVUA+r4lK5dORqE+Xp7BbokRP7VSbS18arvPGJTXs8cUiXDXRwWkZikTyu6aGgtX2uM1qA==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIIClzCCAX8CBgGGy4odWjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIzMDMxMDEyMzkzMVoXDTMzMDMxMDEyNDExMVowDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL1S5wrfjN0ygBGuBHYo0ADk/SQzuhI2Z1SkxHbEuUAHmOyefKDloqBTgdYUO6vBhCCC+q1O1SWmgwXjzAqDaGQVurm+5YBmF0NpRn9lHfyRpz+wKt/8jse7OgY0CfHp0MS3ZDiiiOMKtu9UYGLXQMmTmJpZ0nuGQOLpIpxmfktblFMvLVL8Ymny3YLyTziRAL7ru+7Qk9glvCpblziET1fyVghhXM4l/ipjJW3xLq8bRsPn+daeKua4+8nX98OZRcCX/bd9y1E4i4DU9iarwv3/GEvcS2D5y5OoVJyjAWSfI9mNIxHR+k8B6c3ZNgGZMpRnmLlBi4BYwLhsXtblcl0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAksA1kuBwfb5fExS0x8CZq5vx58Cu4/f9P7ZBP88RyVdLvs7qzk+HjezszrKuPgLdjDG3tExdj3mE6a0/DCKfnv+jBjM6CsEIUd/Mh1R6ebtdRFeG/lucUvUzj6G83SZByxPiUZrHPpnN8l+Tub012ooA0EDQAFP8EbBxCjDxiuy4MpYe8GCfO3NB5CnTgt/4Owb/msovKHqeZ7msKAikvLcjpzfltOh//Ku51lwSQ2enBQdewl/Lkh1cOZm33CrLlB6kBGbzyLvLASgQl+kJR8a2mElsocBls+Rpm6eRroOm8Db1XsPs1ZOmQ97m9Z2wYGXHfuHF5t7+Bd1FK/8YTA==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "860c5386-997a-4e40-993c-a412039319bd",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "03a42c2a-5ecc-488b-90cf-a432591c478c" ],
        "secret" : [ "15jcbgAlmPUY72Dxlq6KuBo0LqAz4MaYYexljQ7W25O98PaQn68s_wunbF9DA1Kto4mk7tN4AdN6icQhmkghNQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "4ecfa334-d61c-49e5-88c0-fac032809e8f",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bf814c80-23ee-4250-8080-b78a1b853197",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ac262980-0244-4bfe-9c09-02e7a7d796f6",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c031c2dd-3904-4fd0-bcbe-858ca3c42e5a",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "98da755e-8d99-424c-8c33-3806683ba247",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3f656943-267e-488b-9268-b76d7dbaeaca",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "529040bf-4b82-4b67-a473-287fd5518810",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e400e46c-e18b-4fb3-83a5-c1bf3fbcbd22",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "91fabb72-3280-4c53-b61f-50e8ea09b407",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b13a8f4d-591d-404f-9d51-7fccce1c9de7",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5ce878d4-bf66-47f7-bc42-1804fd392040",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "53b94767-53f4-44f4-9def-74e5064480fe",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8d0d6ae5-e0f1-4c5f-82c9-755ad401fc85",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "da2db2e4-2359-454f-b438-db5f14413d8c",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a392e7ed-a262-4930-9814-67d309ac101c",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a6b7f257-f31e-4688-a471-cbdef7dcb326",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cf02ba95-a32a-491d-8a59-c22ccd8458f0",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e1a7a2e4-9202-4ea8-bc16-1d686e753c32",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ebe08759-a509-4d39-9671-79a44bdadf4e",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b90f92f8-b31f-4d4c-b5cd-b8b6d2576674",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "141e71d2-84c1-424c-a270-9e9ba793c191",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "5fd22673-7297-42db-900c-914033f26db4",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "21.0.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}